/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.timone.gate;

import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.intellijthemes.materialthemeuilite.FlatGitHubDarkIJTheme;
import com.timone.connection.DBConnection;
import com.timone.main.admin.mainAdmin;
import com.timone.main.cashier.CashierForm;
import javax.swing.UIManager;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;


/**
 *
 * @author Fadel
 */
public class LoginPage extends javax.swing.JFrame {
    
    
    /**
     * Creates new form LoginPage
     */
    public LoginPage() {
        UIManager.put("TextComponent.arc", 10);
        initComponents();
        setLocationRelativeTo(null);
        // Menambahkan ActionListener ke JTextField
    jTextField1.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            jPasswordField1.requestFocusInWindow(); // Memindahkan fokus ke JPasswordField
        }
    });

    // Menambahkan ActionListener ke JPasswordField
    jPasswordField1.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            // Memanggil metode checkCredentials() saat tombol "Enter" ditekan pada JPasswordField
            checkPassword();
        }
    });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("Login");

        jTextField1.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Username");
        jTextField1.setDoubleBuffered(true);
        jTextField1.setFocusCycleRoot(true);

        jButton1.setText("Login");
        jButton1.setBorderPainted(false);
        jButton1.setDoubleBuffered(true);
        jButton1.setFocusPainted(false);
        jButton1.setFocusable(false);
        jButton1.setRequestFocusEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPasswordField1.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Password");

        jButton2.setText("login dengan RFID");
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setDoubleBuffered(true);
        jButton2.setFocusPainted(false);
        jButton2.setFocusable(false);
        jButton2.setRequestFocusEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(jPasswordField1)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addGap(42, 42, 42)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        checkPassword();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        RfidPage.main(new String[]{});
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void checkPassword() {
    Connection conn = null;
    PreparedStatement pstmt = null;
    ResultSet rs = null;

    try {
        conn = DBConnection.getConnection();
        
        // Periksa tabel 'about'
        String aboutQuery = "SELECT * FROM about WHERE username = ? AND password = ?";
        pstmt = conn.prepareStatement(aboutQuery);
        pstmt.setString(1, jTextField1.getText());
        pstmt.setString(2, new String(jPasswordField1.getPassword()));
        rs = pstmt.executeQuery();

        if (rs.next()) {
            // Jika username dan password cocok dengan tabel 'about', buka MainAdmin
            mainAdmin.main(new String[]{});
            this.dispose();
            return; // Keluar dari metode setelah membuka MainAdmin
        }

        // Periksa tabel 'karyawan'
        String karyawanQuery = "SELECT * FROM akun_karyawan WHERE username = ? AND password = ?";
        pstmt = conn.prepareStatement(karyawanQuery);
        pstmt.setString(1, jTextField1.getText());
        pstmt.setString(2, new String(jPasswordField1.getPassword()));
        rs = pstmt.executeQuery();

        if (rs.next()) {
            // Jika username dan password cocok dengan tabel 'karyawan', buka CashierForm
            CashierForm.main(new String[]{});
            this.dispose();
            return; // Keluar dari metode setelah membuka CashierForm
        }

        // Jika tidak ada username dan password yang cocok
        jTextField1.setText("");
        jPasswordField1.setText("");
        jTextField1.requestFocusInWindow();
        JOptionPane.showMessageDialog(this, "Username atau Password salah", "Error", JOptionPane.ERROR_MESSAGE);
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat memeriksa kredensial.", "Error", JOptionPane.ERROR_MESSAGE);
    } finally {
        // Tutup semua sumber daya
        try {
            if (rs != null) rs.close();
            if (pstmt != null) pstmt.close();
            if (conn != null) conn.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
}

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        FlatGitHubDarkIJTheme.setup();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
