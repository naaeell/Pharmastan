/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.timone.main.admin.add;

import com.formdev.flatlaf.intellijthemes.materialthemeuilite.FlatGitHubIJTheme;
import com.sun.jdi.connect.spi.Connection;
import com.timone.connection.DbConnection;
import java.util.Random;
import javax.swing.JFrame;
import javax.swing.UIManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;


/**
 *
 * @author Fadel
 */
public class FormAddPurchase extends javax.swing.JFrame {

    /**
     * Creates new form formSetting
     */
    public FormAddPurchase() {
        UIManager.put( "TextComponent.arc", 10 );
        initComponents();
        ComboboxPBF();
        ComboboxKategori();
        ComboboxBentuk();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        jTextField7.setEnabled(false);
        addTextFilters();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jCheckBox5 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setText("Pembelian");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Kode Pembelian");

        jCheckBox1.setText("Generate kode pembelian");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Tanggal Pembelian");

        jDateChooser1.setForeground(new java.awt.Color(255, 255, 255));
        jDateChooser1.setDateFormatString("d MMM y");

        jComboBox1.setMaximumRowCount(5);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("PBF/Distributor");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Kode Barang");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Kategori");

        jComboBox3.setMaximumRowCount(5);
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Bentuk");

        jComboBox4.setMaximumRowCount(5);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Satuan");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Tanggal Expired");

        jDateChooser2.setDateFormatString("d MMM y");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("Jumlah Pembelian");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("Harga Pembelian");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setText("Harga Jual Satuan");

        jCheckBox2.setText("Gunakan persen");
        jCheckBox2.setFocusPainted(false);
        jCheckBox2.setFocusable(false);
        jCheckBox2.setRequestFocusEnabled(false);
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setText("Simpan");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel29.setText("Masukkan harga jual. Anda dapat");

        jLabel31.setText("memasukkannya secara manual atau");

        jLabel32.setText("menggunakan presentase. Anda juga");

        jLabel33.setText("dapat mengubahnya nanti.");

        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel21.setText("Nama Barang");

        jCheckBox5.setText("Generate kode barang");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField1)
                            .addComponent(jTextField2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel21)
                            .addComponent(jTextField10)
                            .addComponent(jCheckBox5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(jLabel6)
                            .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField7))
                    .addComponent(jLabel11)
                    .addComponent(jTextField5, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                .addGap(55, 55, 55))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel2)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(32, 32, 32)
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(32, 32, 32)
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jCheckBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel21)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(38, 38, 38)
                                    .addComponent(jLabel12)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextField7, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                                        .addComponent(jCheckBox2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(16, 16, 16)
                                    .addComponent(jLabel29)
                                    .addGap(0, 0, 0)
                                    .addComponent(jLabel31)
                                    .addGap(0, 0, 0)
                                    .addComponent(jLabel32)
                                    .addGap(0, 0, 0)
                                    .addComponent(jLabel33)
                                    .addGap(30, 30, 30)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(101, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (jCheckBox1.isSelected()) {
            jTextField1.setText(generatePembelian());
            jTextField1.setEnabled(false);
        } else {
            jTextField1.requestFocusInWindow();
            jTextField1.setText("");
            jTextField1.setEnabled(true);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        if (jCheckBox2.isSelected()) {
            jTextField7.requestFocusInWindow();
            jTextField7.setEnabled(true);
            jTextField6.setText(generatePembelian());
            jTextField6.setEnabled(false);
            jTextField6.setText("");
        } else {
            jTextField6.requestFocusInWindow();
            jTextField6.setEnabled(true);
            jTextField7.setEnabled(false);
            jTextField7.setText("");
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        if (jCheckBox5.isSelected()) {
            jTextField2.setText(generateBarang());
            jTextField2.setEnabled(false);
        } else {
            jTextField2.requestFocusInWindow();
            jTextField2.setText("");
            jTextField2.setEnabled(true);
        }
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Periksa apakah semua variabel termasuk jDateChooser kosong
        if (isFormEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua isian harus diisi terlebih dahulu.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return; // Keluar dari metode jika form kosong
        }

        // Lanjutkan dengan menambahkan pembelian dan barang
        insertBarang();
        insertPembelian();
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
   
    private void addTextFilters() {
        
        // Filter untuk JTextField yang tidak bisa input symbol kecuali spasi
        JTextField[] noSymbolFields = {jTextField1, jTextField2, jTextField3, jTextField10};
        for (JTextField field : noSymbolFields) {
            ((AbstractDocument) field.getDocument()).setDocumentFilter(new DocumentFilter() {
                @Override
                public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                    StringBuilder sb = new StringBuilder();
                    for (int i = 0; i < text.length(); i++) {
                        char c = text.charAt(i);
                        if (Character.isLetterOrDigit(c) || Character.isWhitespace(c)) {
                            sb.append(c);
                        }
                    }
                    super.replace(fb, offset, length, sb.toString(), attrs);
                }
            });
        }

        // Filter untuk JTextField yang hanya bisa input angka
        JTextField[] numericFields = {jTextField4, jTextField5, jTextField6, jTextField7};
        for (JTextField field : numericFields) {
            ((AbstractDocument) field.getDocument()).setDocumentFilter(new DocumentFilter() {
                @Override
                public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                    if (text.matches("[\\d]*")) {
                        super.replace(fb, offset, length, text, attrs);
                    }
                }
            });
        }
    }
    
    private void ComboboxPBF() {
        Connection connection = null;
        PreparedStatement statement = null;
        ResultSet resultSet = null;

        try {
            // Mendapatkan koneksi dari kelas DbConnection
            java.sql.Connection conn = DbConnection.getConnection();

            // Query untuk mendapatkan data dari tabel distributor
            String query = "SELECT nama_distributor FROM distributor";
            statement = conn.prepareStatement(query);

            // Eksekusi query
            resultSet = statement.executeQuery();

            // Mengisi JComboBox1 dengan hasil query
            while (resultSet.next()) {
                String distributorName = resultSet.getString("nama_distributor");
                jComboBox1.addItem(distributorName);
                 dispose();
            }

        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            // Menutup sumber daya terkait
            try {
                if (resultSet != null) resultSet.close();
                if (statement != null) statement.close();
                // Koneksi tidak ditutup di sini karena didapat dari DbConnection
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
    
    private void ComboboxKategori() {
        Connection connection = null;
        PreparedStatement statement = null;
        ResultSet resultSet = null;

        try {
            // Mendapatkan koneksi dari kelas DbConnection
            java.sql.Connection conn = DbConnection.getConnection();

            // Query untuk mendapatkan data dari tabel distributor
            String query = "SELECT nama_kategori FROM kategori_obat";
            statement = conn.prepareStatement(query);

            // Eksekusi query
            resultSet = statement.executeQuery();

            // Mengisi JComboBox1 dengan hasil query
            while (resultSet.next()) {
                String distributorName = resultSet.getString("nama_kategori");
                jComboBox3.addItem(distributorName);
            }

        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            // Menutup sumber daya terkait
            try {
                if (resultSet != null) resultSet.close();
                if (statement != null) statement.close();
                // Koneksi tidak ditutup di sini karena didapat dari DbConnection
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
    
    private void ComboboxBentuk() {
        Connection connection = null;
        PreparedStatement statement = null;
        ResultSet resultSet = null;

        try {
            // Mendapatkan koneksi dari kelas DbConnection
            java.sql.Connection conn = DbConnection.getConnection();

            // Query untuk mendapatkan data dari tabel distributor
            String query = "SELECT nama_bentuk_obat FROM bentuk_obat";
            statement = conn.prepareStatement(query);

            // Eksekusi query
            resultSet = statement.executeQuery();

            // Mengisi JComboBox1 dengan hasil query
            while (resultSet.next()) {
                String distributorName = resultSet.getString("nama_bentuk_obat");
                jComboBox4.addItem(distributorName);
            }

        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            // Menutup sumber daya terkait
            try {
                if (resultSet != null) resultSet.close();
                if (statement != null) statement.close();
                // Koneksi tidak ditutup di sini karena didapat dari DbConnection
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
    
    public static String generatePembelian() {
        String prefix = "PB";
        StringBuilder sb = new StringBuilder(prefix);

        // generate 10 karakter numerik
        Random random = new Random();
        for (int i = 0; i < 10; i++) {
            // buat limit biar bisa generate hanya dari 0 dan 9
            char digit = (char) (random.nextInt(10) + '0');
            sb.append(digit);
        }
        return sb.toString();
    }
    
    public static String generateBarang() {
        String prefix = "BRG";
        StringBuilder sb = new StringBuilder(prefix);

        // generate 10 karakter numerik
        Random random = new Random();
        for (int i = 0; i < 10; i++) {
            // buat limit biar bisa generate hanya dari 0 dan 9
            char digit = (char) (random.nextInt(10) + '0');
            sb.append(digit);
        }
        return sb.toString();
    }
    
    // Method untuk mendapatkan kode distributor dari pilihan JComboBox
    private String getKodeDistributorFromComboBox(JComboBox comboBox) {
        String kodeDistributor = "";
        String namaDistributor = comboBox.getSelectedItem().toString();

        try (java.sql.Connection connection = DbConnection.getConnection();
             PreparedStatement statement = connection.prepareStatement("SELECT kode_distributor FROM distributor WHERE nama_distributor = ?")) {
            statement.setString(1, namaDistributor);
            ResultSet resultSet = statement.executeQuery();
            if (resultSet.next()) {
                kodeDistributor = resultSet.getString("kode_distributor");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("Gagal mengambil kode distributor: " + e.getMessage());
        }

        return kodeDistributor;
    }
    
    // Method untuk mendapatkan kode distributor dari pilihan JComboBox
    private String getKodeKategoriFromComboBox(JComboBox comboBox) {
        String kodeKategori = "";
        String namaKategori = comboBox.getSelectedItem().toString();

        try (java.sql.Connection connection = DbConnection.getConnection();
             PreparedStatement statement = connection.prepareStatement("SELECT kode_kategori_obat FROM kategori_obat WHERE nama_kategori = ?")) {
            statement.setString(1, namaKategori);
            ResultSet resultSet = statement.executeQuery();
            if (resultSet.next()) {
                kodeKategori = resultSet.getString("kode_kategori_obat");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("Gagal mengambil kode distributor: " + e.getMessage());
        }

        return kodeKategori;
    }
    
    // Method untuk mendapatkan kode distributor dari pilihan JComboBox
    private String getKodeBentukFromComboBox(JComboBox comboBox) {
        String kodeBentuk = "";
        String namaBentuk = comboBox.getSelectedItem().toString();

        try (java.sql.Connection connection = DbConnection.getConnection();
             PreparedStatement statement = connection.prepareStatement("SELECT kode_bentuk_obat FROM bentuk_obat WHERE nama_bentuk_obat = ?")) {
            statement.setString(1, namaBentuk);
            ResultSet resultSet = statement.executeQuery();
            if (resultSet.next()) {
                kodeBentuk = resultSet.getString("kode_bentuk_obat");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("Gagal mengambil kode distributor: " + e.getMessage());
        }

        return kodeBentuk;
    }
    
    // Fungsi untuk memeriksa apakah semua variabel form kosong
    private boolean isFormEmpty() {
        // Periksa jika jTextField1 kosong atau jDateChooser1 belum dipilih
        if (jTextField1.getText().isEmpty() || jDateChooser1.getDate() == null) {
            return true;
        }

        // Periksa jika jComboBox1 belum dipilih
        if (jComboBox1.getSelectedIndex() == -1) {
            return true;
        }

        // Periksa jika jTextField2, jTextField4, jTextField5, dan jTextField6 kosong
        if (jTextField2.getText().isEmpty() || jTextField4.getText().isEmpty() || jTextField5.getText().isEmpty() || jTextField6.getText().isEmpty()) {
            return true;
        }

        // Periksa jika jCheckBox2 dipilih tetapi jTextField7 kosong
        if (jCheckBox2.isSelected() && jTextField7.getText().isEmpty()) {
            return true;
        }

        // Semua isian terisi
        return false;
    }
    
    private void insertPembelian() {
        String kodePemesanan = jTextField1.getText();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String tanggalPemesanan = sdf.format(jDateChooser1.getDate());
        String kodeDistributor = getKodeDistributorFromComboBox(jComboBox1);
        String kodeBarang = jTextField2.getText();
        String jumlahPembelian = jTextField4.getText();
        String hargaTotal = jTextField5.getText();
        String labaPcs = jTextField6.getText();

        // Lakukan pembulatan harga total
        int hargaTotalBulat = Math.round(Float.parseFloat(hargaTotal));

        // Lakukan perhitungan laba
        double laba = 0.0;
        if (jCheckBox2.isSelected()) {
            double harga = Double.parseDouble(hargaTotal);
            double jumlah = Double.parseDouble(jumlahPembelian);

            if (!jTextField7.getText().isEmpty()) {
                double persen = Double.parseDouble(jTextField7.getText());
                laba = (harga / jumlah) * (1 + (persen / 100));
            } else {
                laba = Double.parseDouble(labaPcs);
            }
        } else {
            laba = Double.parseDouble(labaPcs);
        }

        // Query untuk insert data ke tabel pembelian
        String query = "INSERT INTO pembelian (kode_pemesanan, tanggal_pemesanan, kode_distributor, kode_barang, jumlah_pembelian, harga_total, laba_pcs) VALUES (?, ?, ?, ?, ?, ?, ?)";

        try (java.sql.Connection connection = DbConnection.getConnection();
             PreparedStatement statement = connection.prepareStatement(query)) {

            // Set nilai parameter query
            statement.setString(1, kodePemesanan);
            statement.setString(2, tanggalPemesanan);
            statement.setString(3, kodeDistributor);
            statement.setString(4, kodeBarang);
            statement.setString(5, jumlahPembelian);
            statement.setString(6, String.valueOf(hargaTotalBulat)); // Harga total setelah pembulatan
            statement.setString(7, String.valueOf(laba)); // Laba yang sudah dihitung

            // Jalankan query
            statement.executeUpdate();
            System.out.println("Data pembelian berhasil ditambahkan ke database.");

        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("Gagal menambahkan data pembelian ke database: " + e.getMessage());
        }
    }

    private void insertBarang() {
        // Ambil isian dari JTextField
        String kodeBarang = jTextField2.getText();
        String namaBarang = jTextField10.getText();
        String satuanObat = jTextField3.getText();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String kadaluarsa = sdf.format(jDateChooser2.getDate());
        String kodeKategori = getKodeKategoriFromComboBox(jComboBox3);
        String kodeBentuk = getKodeBentukFromComboBox(jComboBox4);
        String kuantitas = jTextField4.getText();
        String hargaPcs;

        if (jCheckBox2.isSelected()) {
            // Hitung harga total jika checkbox dipilih
            double hargaTotal = Double.parseDouble(jTextField5.getText());
            double jumlah = Double.parseDouble(jTextField4.getText());
            double persen = Double.parseDouble(jTextField7.getText());
            double hargaPerPcs = (hargaTotal / jumlah) * (1 + (persen / 100));
            hargaPcs = String.valueOf(hargaPerPcs);
        } else {
            // Ambil harga dari jTextField6 jika checkbox tidak dipilih
            hargaPcs = jTextField6.getText();
        }
        
        // Query untuk insert data ke tabel barang
        String query = "INSERT INTO barang (kode_barang, nama_barang, satuan_obat, kadaluarsa, kode_kategori_obat, kode_bentuk_obat, kuantitas, harga_pcs) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";

        try (java.sql.Connection connection = DbConnection.getConnection();
             PreparedStatement statement = connection.prepareStatement(query)) {

            // Set nilai parameter query
            statement.setString(1, kodeBarang);
            statement.setString(2, namaBarang);
            statement.setString(3, satuanObat);
            statement.setString(4, kadaluarsa);
            statement.setString(5, kodeKategori);
            statement.setString(6, kodeBentuk);
            statement.setString(7, kuantitas);
            statement.setString(8, hargaPcs);

            // Jalankan query
            statement.executeUpdate();
            System.out.println("Data barang berhasil ditambahkan ke database.");

        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("Gagal menambahkan data barang ke database: " + e.getMessage());
        }
    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        FlatGitHubIJTheme.setup();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormAddPurchase form = new FormAddPurchase();
                form.setLocationRelativeTo(null); // Memposisikan jendela di tengah layar
                form.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    // End of variables declaration//GEN-END:variables
}
