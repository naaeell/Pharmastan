/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.timone.main.admin;

import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import com.timone.connection.DBConnection;
import com.formdev.flatlaf.intellijthemes.materialthemeuilite.FlatGitHubDarkIJTheme;
import com.timone.gate.LoginPage;
import com.timone.main.admin.theme.ThemeSync;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.UIManager;
import java.sql.PreparedStatement;
import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
/**
 *
 * @author Fadel
 */
public class mainAdmin extends javax.swing.JFrame {
    
    

    
            
    public mainAdmin() {
        
        UIManager.put( "TextComponent.arc", 10 );
        initComponents();
        InventoryTable();
        SalesTable();
        PurchaseTable();
        DistributorTable();
        OperationTable();
        WorkerTable();
        AbsenTable();
        jTextField1.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                InventoryTable();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                InventoryTable();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                InventoryTable();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jTextField2 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jTextField3 = new javax.swing.JTextField();
        jButton35 = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        jButton37 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        jButton53 = new javax.swing.JButton();
        jButton54 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jTextField4 = new javax.swing.JTextField();
        jButton38 = new javax.swing.JButton();
        jButton39 = new javax.swing.JButton();
        jButton40 = new javax.swing.JButton();
        jButton59 = new javax.swing.JButton();
        jButton60 = new javax.swing.JButton();
        jButton61 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jTextField6 = new javax.swing.JTextField();
        jButton41 = new javax.swing.JButton();
        jButton42 = new javax.swing.JButton();
        jButton43 = new javax.swing.JButton();
        jButton66 = new javax.swing.JButton();
        jButton67 = new javax.swing.JButton();
        jButton68 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jTextField5 = new javax.swing.JTextField();
        jButton45 = new javax.swing.JButton();
        jButton46 = new javax.swing.JButton();
        jButton47 = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTable9 = new javax.swing.JTable();
        jButton73 = new javax.swing.JButton();
        jButton74 = new javax.swing.JButton();
        jButton75 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTabbedPane1.setDoubleBuffered(true);
        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jTabbedPane1.setName(""); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status", "Kode Barang", "Nama Barang", "Kategori", "Bentuk", "Satuan", "Exp", "Stok", "Harga Jual (pcs)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setFocusable(false);
        jTable1.setGridColor(new java.awt.Color(242, 242, 242));
        jTable1.setRequestFocusEnabled(false);
        jTable1.setRowSelectionAllowed(false);
        jTable1.setShowGrid(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                opsi(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(150);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(150);
            jTable1.getColumnModel().getColumn(1).setMinWidth(150);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(150);
            jTable1.getColumnModel().getColumn(2).setMinWidth(200);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(200);
            jTable1.getColumnModel().getColumn(3).setMinWidth(120);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(120);
            jTable1.getColumnModel().getColumn(4).setMinWidth(90);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(90);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(90);
            jTable1.getColumnModel().getColumn(5).setMinWidth(90);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(90);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(90);
            jTable1.getColumnModel().getColumn(7).setMinWidth(80);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(7).setMaxWidth(80);
        }

        jTextField1.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Cari");
        jTextField1.setName(""); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setIcon(new FlatSVGIcon("com/timone/icon/svg/report.svg", 1.3f));
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setFocusPainted(false);
        jButton1.setFocusable(false);
        jButton1.setRequestFocusEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new FlatSVGIcon("com/timone/icon/svg/refresh.svg", 1.5f));
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setFocusPainted(false);
        jButton2.setFocusable(false);
        jButton2.setRequestFocusEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton17.setIcon(new FlatSVGIcon("com/timone/icon/svg/info.svg", 1.3f));
        jButton17.setBorderPainted(false);
        jButton17.setContentAreaFilled(false);
        jButton17.setFocusPainted(false);
        jButton17.setFocusable(false);
        jButton17.setRequestFocusEnabled(false);
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton28.setIcon(new FlatSVGIcon("com/timone/icon/svg/lightdarkmode.svg", 1.3f));
        jButton28.setBorderPainted(false);
        jButton28.setContentAreaFilled(false);
        jButton28.setFocusPainted(false);
        jButton28.setFocusable(false);
        jButton28.setRequestFocusEnabled(false);
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        jButton31.setIcon(new FlatSVGIcon("com/timone/icon/svg/exit.svg", 1.3f));
        jButton31.setBorderPainted(false);
        jButton31.setContentAreaFilled(false);
        jButton31.setFocusPainted(false);
        jButton31.setFocusable(false);
        jButton31.setRequestFocusEnabled(false);
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1170, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton31, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton31, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Barang", jPanel3);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Kode Penjualan", "Tanggal Transaksi", "User", "Kode Barang", "Nama Barang", "Barang Terjual", "Laba (pcs)", "Laba Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setFocusable(false);
        jTable2.setRequestFocusEnabled(false);
        jTable2.setRowSelectionAllowed(false);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable2);

        jTextField2.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Cari");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton7.setIcon(new FlatSVGIcon("com/timone/icon/svg/report.svg", 1.3f));
        jButton7.setBorderPainted(false);
        jButton7.setContentAreaFilled(false);
        jButton7.setFocusPainted(false);
        jButton7.setFocusable(false);
        jButton7.setRequestFocusEnabled(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton9.setIcon(new FlatSVGIcon("com/timone/icon/svg/refresh.svg", 1.5f));
        jButton9.setBorderPainted(false);
        jButton9.setContentAreaFilled(false);
        jButton9.setFocusPainted(false);
        jButton9.setFocusable(false);
        jButton9.setRequestFocusEnabled(false);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton29.setIcon(new FlatSVGIcon("com/timone/icon/svg/info.svg", 1.3f));
        jButton29.setBorderPainted(false);
        jButton29.setContentAreaFilled(false);
        jButton29.setFocusPainted(false);
        jButton29.setFocusable(false);
        jButton29.setRequestFocusEnabled(false);
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        jButton30.setIcon(new FlatSVGIcon("com/timone/icon/svg/lightdarkmode.svg", 1.3f));
        jButton30.setBorderPainted(false);
        jButton30.setContentAreaFilled(false);
        jButton30.setFocusPainted(false);
        jButton30.setFocusable(false);
        jButton30.setRequestFocusEnabled(false);
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        jButton32.setIcon(new FlatSVGIcon("com/timone/icon/svg/exit.svg", 1.3f));
        jButton32.setBorderPainted(false);
        jButton32.setContentAreaFilled(false);
        jButton32.setFocusPainted(false);
        jButton32.setFocusable(false);
        jButton32.setRequestFocusEnabled(false);
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1170, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton32, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jButton30, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton30, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton32, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Penjualan", jPanel4);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Kode Pemesanan", "Tanggal Pemesanan", "Distributor", "Kode Barang", "Nama Barang", "Kategori", "Bentuk", "Satuan", "Jumlah Pembelian", "Harga Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.setFocusable(false);
        jTable3.setRequestFocusEnabled(false);
        jTable3.setRowSelectionAllowed(false);
        jTable3.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTable3);

        jTextField3.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Cari");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jButton35.setIcon(new FlatSVGIcon("com/timone/icon/svg/add.svg", 1.6f));
        jButton35.setBorderPainted(false);
        jButton35.setContentAreaFilled(false);
        jButton35.setFocusPainted(false);
        jButton35.setFocusable(false);
        jButton35.setRequestFocusEnabled(false);
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });

        jButton36.setIcon(new FlatSVGIcon("com/timone/icon/svg/refresh.svg", 1.5f));
        jButton36.setBorderPainted(false);
        jButton36.setContentAreaFilled(false);
        jButton36.setFocusPainted(false);
        jButton36.setFocusable(false);
        jButton36.setRequestFocusEnabled(false);
        jButton36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton36ActionPerformed(evt);
            }
        });

        jButton37.setIcon(new FlatSVGIcon("com/timone/icon/svg/report.svg", 1.3f));
        jButton37.setBorderPainted(false);
        jButton37.setContentAreaFilled(false);
        jButton37.setFocusPainted(false);
        jButton37.setFocusable(false);
        jButton37.setRequestFocusEnabled(false);
        jButton37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton37ActionPerformed(evt);
            }
        });

        jButton52.setIcon(new FlatSVGIcon("com/timone/icon/svg/info.svg", 1.3f));
        jButton52.setBorderPainted(false);
        jButton52.setContentAreaFilled(false);
        jButton52.setFocusPainted(false);
        jButton52.setFocusable(false);
        jButton52.setRequestFocusEnabled(false);
        jButton52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton52ActionPerformed(evt);
            }
        });

        jButton53.setIcon(new FlatSVGIcon("com/timone/icon/svg/lightdarkmode.svg", 1.3f));
        jButton53.setBorderPainted(false);
        jButton53.setContentAreaFilled(false);
        jButton53.setFocusPainted(false);
        jButton53.setFocusable(false);
        jButton53.setRequestFocusEnabled(false);
        jButton53.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton53ActionPerformed(evt);
            }
        });

        jButton54.setIcon(new FlatSVGIcon("com/timone/icon/svg/exit.svg", 1.3f));
        jButton54.setBorderPainted(false);
        jButton54.setContentAreaFilled(false);
        jButton54.setFocusPainted(false);
        jButton54.setFocusable(false);
        jButton54.setRequestFocusEnabled(false);
        jButton54.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton54ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1170, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton37, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jButton36, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jButton35, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton54, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jButton53, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jButton52, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton37, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton36, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton35, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jButton52, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton53, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton54, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pembelian", jPanel1);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Kode Distributor", "Nama Distributor", "Alamat", "Kontak Person", "Email", "Nomor Telepon"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable4.setFocusable(false);
        jTable4.setRequestFocusEnabled(false);
        jTable4.setRowSelectionAllowed(false);
        jTable4.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jTable4);

        jTextField4.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Cari");
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jButton38.setIcon(new FlatSVGIcon("com/timone/icon/svg/report.svg", 1.3f));
        jButton38.setBorderPainted(false);
        jButton38.setContentAreaFilled(false);
        jButton38.setFocusPainted(false);
        jButton38.setFocusable(false);
        jButton38.setRequestFocusEnabled(false);
        jButton38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton38ActionPerformed(evt);
            }
        });

        jButton39.setIcon(new FlatSVGIcon("com/timone/icon/svg/refresh.svg", 1.5f));
        jButton39.setBorderPainted(false);
        jButton39.setContentAreaFilled(false);
        jButton39.setFocusPainted(false);
        jButton39.setFocusable(false);
        jButton39.setRequestFocusEnabled(false);
        jButton39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton39ActionPerformed(evt);
            }
        });

        jButton40.setIcon(new FlatSVGIcon("com/timone/icon/svg/add.svg", 1.6f));
        jButton40.setBorderPainted(false);
        jButton40.setContentAreaFilled(false);
        jButton40.setFocusPainted(false);
        jButton40.setFocusable(false);
        jButton40.setRequestFocusEnabled(false);
        jButton40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton40ActionPerformed(evt);
            }
        });

        jButton59.setIcon(new FlatSVGIcon("com/timone/icon/svg/info.svg", 1.3f));
        jButton59.setBorderPainted(false);
        jButton59.setContentAreaFilled(false);
        jButton59.setFocusPainted(false);
        jButton59.setFocusable(false);
        jButton59.setRequestFocusEnabled(false);
        jButton59.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton59ActionPerformed(evt);
            }
        });

        jButton60.setIcon(new FlatSVGIcon("com/timone/icon/svg/lightdarkmode.svg", 1.3f));
        jButton60.setBorderPainted(false);
        jButton60.setContentAreaFilled(false);
        jButton60.setFocusPainted(false);
        jButton60.setFocusable(false);
        jButton60.setRequestFocusEnabled(false);
        jButton60.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton60ActionPerformed(evt);
            }
        });

        jButton61.setIcon(new FlatSVGIcon("com/timone/icon/svg/exit.svg", 1.3f));
        jButton61.setBorderPainted(false);
        jButton61.setContentAreaFilled(false);
        jButton61.setFocusPainted(false);
        jButton61.setFocusable(false);
        jButton61.setRequestFocusEnabled(false);
        jButton61.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton61ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1170, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jButton38, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jButton39, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jButton40, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton61, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jButton60, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jButton59, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton38, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton39, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton40, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jButton61, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton59, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton60, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Distributor", jPanel5);

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama Biaya", "Deskripsi", "Total Biaya"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable6.setFocusable(false);
        jTable6.setRequestFocusEnabled(false);
        jTable6.setRowSelectionAllowed(false);
        jTable6.getTableHeader().setReorderingAllowed(false);
        jScrollPane7.setViewportView(jTable6);

        jTextField6.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Cari");
        jTextField6.setName(""); // NOI18N

        jButton41.setIcon(new FlatSVGIcon("com/timone/icon/svg/report.svg", 1.3f));
        jButton41.setBorderPainted(false);
        jButton41.setContentAreaFilled(false);
        jButton41.setFocusPainted(false);
        jButton41.setFocusable(false);
        jButton41.setRequestFocusEnabled(false);
        jButton41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton41ActionPerformed(evt);
            }
        });

        jButton42.setIcon(new FlatSVGIcon("com/timone/icon/svg/refresh.svg", 1.5f));
        jButton42.setBorderPainted(false);
        jButton42.setContentAreaFilled(false);
        jButton42.setFocusPainted(false);
        jButton42.setFocusable(false);
        jButton42.setRequestFocusEnabled(false);
        jButton42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton42ActionPerformed(evt);
            }
        });

        jButton43.setIcon(new FlatSVGIcon("com/timone/icon/svg/add.svg", 1.6f));
        jButton43.setBorderPainted(false);
        jButton43.setContentAreaFilled(false);
        jButton43.setFocusPainted(false);
        jButton43.setFocusable(false);
        jButton43.setRequestFocusEnabled(false);
        jButton43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton43ActionPerformed(evt);
            }
        });

        jButton66.setIcon(new FlatSVGIcon("com/timone/icon/svg/info.svg", 1.3f));
        jButton66.setBorderPainted(false);
        jButton66.setContentAreaFilled(false);
        jButton66.setFocusPainted(false);
        jButton66.setFocusable(false);
        jButton66.setRequestFocusEnabled(false);
        jButton66.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton66ActionPerformed(evt);
            }
        });

        jButton67.setIcon(new FlatSVGIcon("com/timone/icon/svg/lightdarkmode.svg", 1.3f));
        jButton67.setBorderPainted(false);
        jButton67.setContentAreaFilled(false);
        jButton67.setFocusPainted(false);
        jButton67.setFocusable(false);
        jButton67.setRequestFocusEnabled(false);
        jButton67.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton67ActionPerformed(evt);
            }
        });

        jButton68.setIcon(new FlatSVGIcon("com/timone/icon/svg/exit.svg", 1.3f));
        jButton68.setBorderPainted(false);
        jButton68.setContentAreaFilled(false);
        jButton68.setFocusPainted(false);
        jButton68.setFocusable(false);
        jButton68.setRequestFocusEnabled(false);
        jButton68.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton68ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 1170, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jButton41, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jButton42, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jButton43, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton68, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jButton67, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jButton66, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton41, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton42, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton43, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton66, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton67, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton68, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Operasional", jPanel8);

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama", "Email", "Username", "Password", "Rfid"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable5.setFocusable(false);
        jTable5.setRequestFocusEnabled(false);
        jTable5.setRowSelectionAllowed(false);
        jTable5.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(jTable5);

        jTextField5.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Cari");
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jButton45.setIcon(new FlatSVGIcon("com/timone/icon/svg/report.svg", 1.3f));
        jButton45.setBorderPainted(false);
        jButton45.setContentAreaFilled(false);
        jButton45.setFocusPainted(false);
        jButton45.setFocusable(false);
        jButton45.setRequestFocusEnabled(false);
        jButton45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton45ActionPerformed(evt);
            }
        });

        jButton46.setIcon(new FlatSVGIcon("com/timone/icon/svg/refresh.svg", 1.5f));
        jButton46.setBorderPainted(false);
        jButton46.setContentAreaFilled(false);
        jButton46.setFocusPainted(false);
        jButton46.setFocusable(false);
        jButton46.setRequestFocusEnabled(false);
        jButton46.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton46ActionPerformed(evt);
            }
        });

        jButton47.setIcon(new FlatSVGIcon("com/timone/icon/svg/add.svg", 1.6f));
        jButton47.setBorderPainted(false);
        jButton47.setContentAreaFilled(false);
        jButton47.setFocusPainted(false);
        jButton47.setFocusable(false);
        jButton47.setRequestFocusEnabled(false);
        jButton47.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton47ActionPerformed(evt);
            }
        });

        jTable9.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Tanggal", "Waktu", "Nama", "Username", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable9.setFocusable(false);
        jTable9.setRequestFocusEnabled(false);
        jTable9.setRowSelectionAllowed(false);
        jTable9.getTableHeader().setReorderingAllowed(false);
        jScrollPane10.setViewportView(jTable9);

        jButton73.setIcon(new FlatSVGIcon("com/timone/icon/svg/info.svg", 1.3f));
        jButton73.setBorderPainted(false);
        jButton73.setContentAreaFilled(false);
        jButton73.setFocusPainted(false);
        jButton73.setFocusable(false);
        jButton73.setRequestFocusEnabled(false);
        jButton73.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton73ActionPerformed(evt);
            }
        });

        jButton74.setIcon(new FlatSVGIcon("com/timone/icon/svg/lightdarkmode.svg", 1.3f));
        jButton74.setBorderPainted(false);
        jButton74.setContentAreaFilled(false);
        jButton74.setFocusPainted(false);
        jButton74.setFocusable(false);
        jButton74.setRequestFocusEnabled(false);
        jButton74.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton74ActionPerformed(evt);
            }
        });

        jButton75.setIcon(new FlatSVGIcon("com/timone/icon/svg/exit.svg", 1.3f));
        jButton75.setBorderPainted(false);
        jButton75.setContentAreaFilled(false);
        jButton75.setFocusPainted(false);
        jButton75.setFocusable(false);
        jButton75.setRequestFocusEnabled(false);
        jButton75.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton75ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1170, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jButton45, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jButton46, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jButton47, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton75, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jButton74, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jButton73, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane10)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton45, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton46, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton47, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton73, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton74, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton75, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Karyawan", jPanel6);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        ThemeSync.reportThemeSync();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ThemeSync.reportThemeSync();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void opsi(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_opsi
        
    }//GEN-LAST:event_opsi

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        ThemeSync.aboutThemeSync();
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        ThemeSync.themeChanger();
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        ThemeSync.aboutThemeSync();
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        ThemeSync.themeChanger();
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton52ActionPerformed
        ThemeSync.aboutThemeSync();
    }//GEN-LAST:event_jButton52ActionPerformed

    private void jButton53ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton53ActionPerformed
        ThemeSync.themeChanger();
    }//GEN-LAST:event_jButton53ActionPerformed

    private void jButton59ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton59ActionPerformed
        ThemeSync.aboutThemeSync();
    }//GEN-LAST:event_jButton59ActionPerformed

    private void jButton60ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton60ActionPerformed
        ThemeSync.themeChanger();
    }//GEN-LAST:event_jButton60ActionPerformed

    private void jButton66ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton66ActionPerformed
        ThemeSync.aboutThemeSync();
    }//GEN-LAST:event_jButton66ActionPerformed

    private void jButton67ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton67ActionPerformed
        ThemeSync.themeChanger();
    }//GEN-LAST:event_jButton67ActionPerformed

    private void jButton73ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton73ActionPerformed
        ThemeSync.aboutThemeSync();
    }//GEN-LAST:event_jButton73ActionPerformed

    private void jButton74ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton74ActionPerformed
        ThemeSync.themeChanger();
    }//GEN-LAST:event_jButton74ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       InventoryTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        SalesTable();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton36ActionPerformed
        PurchaseTable();
    }//GEN-LAST:event_jButton36ActionPerformed

    private void jButton39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton39ActionPerformed
        DistributorTable();
    }//GEN-LAST:event_jButton39ActionPerformed

    private void jButton46ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton46ActionPerformed
        WorkerTable();
        AbsenTable();
    }//GEN-LAST:event_jButton46ActionPerformed

    private void jButton45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton45ActionPerformed
        ThemeSync.reportThemeSync();
    }//GEN-LAST:event_jButton45ActionPerformed

    private void jButton37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton37ActionPerformed
        ThemeSync.reportThemeSync();
    }//GEN-LAST:event_jButton37ActionPerformed

    private void jButton38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton38ActionPerformed
        ThemeSync.reportThemeSync();
    }//GEN-LAST:event_jButton38ActionPerformed

    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed
        ThemeSync.reportThemeSync();
    }//GEN-LAST:event_jButton41ActionPerformed

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed
        ThemeSync.addPurchaseThemeSync();
    }//GEN-LAST:event_jButton35ActionPerformed

    private void jButton40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton40ActionPerformed
        ThemeSync.addDistributorThemeSync();
    }//GEN-LAST:event_jButton40ActionPerformed

    private void jButton43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton43ActionPerformed
        ThemeSync.addOperationalThemeSync();
    }//GEN-LAST:event_jButton43ActionPerformed

    private void jButton47ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton47ActionPerformed
        ThemeSync.addWorkerThemeSync();
    }//GEN-LAST:event_jButton47ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton42ActionPerformed
        OperationTable();
    }//GEN-LAST:event_jButton42ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        LoginPage.main(new String[]{});
        this.dispose();
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
        LoginPage.main(new String[]{});
        this.dispose();
    }//GEN-LAST:event_jButton32ActionPerformed

    private void jButton54ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton54ActionPerformed
        LoginPage.main(new String[]{});
        this.dispose();
    }//GEN-LAST:event_jButton54ActionPerformed

    private void jButton61ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton61ActionPerformed
        LoginPage.main(new String[]{});
        this.dispose();
    }//GEN-LAST:event_jButton61ActionPerformed

    private void jButton68ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton68ActionPerformed
        LoginPage.main(new String[]{});
        this.dispose();
    }//GEN-LAST:event_jButton68ActionPerformed

    private void jButton75ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton75ActionPerformed
        LoginPage.main(new String[]{});
        this.dispose();
    }//GEN-LAST:event_jButton75ActionPerformed
   
    
    
    private void InventoryTable() {
     try {
         // Mendapatkan koneksi ke database dari kelas DBConnection
         Connection conn = DBConnection.getConnection();

         // Membuat statement SQL untuk mengambil data dari tabel barang dengan JOIN
         String sql = "SELECT barang.kode_barang, barang.nama_barang, kategori_obat.nama_kategori, bentuk_obat.nama_bentuk_obat, barang.satuan_obat, DATE_FORMAT(barang.kadaluarsa, '%d %M %Y') AS kadaluarsa, barang.kuantitas, barang.harga_pcs, " +
                      "CASE " +
                      "    WHEN barang.kadaluarsa <= CURDATE() THEN 'Expired' " +
                      "    WHEN barang.kadaluarsa <= CURDATE() + INTERVAL 3 MONTH THEN 'Mendekati Expired' " +
                      "    ELSE (CASE " +
                      "              WHEN barang.kuantitas <= 0 THEN 'Stok habis' " +
                      "              WHEN barang.kuantitas <= 15 THEN 'Stok akan habis' " +
                      "              ELSE (CASE " +
                      "                        WHEN barang.kadaluarsa <= CURDATE() + INTERVAL 3 MONTH THEN 'Mendekati expired' " +
                      "                        WHEN barang.kadaluarsa <= CURDATE() + INTERVAL 6 MONTH THEN 'Expired dalam 6 bulan' " +
                      "                        ELSE (CASE " +
                      "                                  WHEN barang.kadaluarsa > CURDATE() + INTERVAL 6 MONTH THEN 'Aman' " +
                      "                                  ELSE NULL " +
                      "                             END) " +
                      "                   END) " +
                      "         END) " +
                      "END AS status " +
                      "FROM barang " +
                      "INNER JOIN kategori_obat ON barang.kode_kategori_obat = kategori_obat.kode_kategori_obat " +
                      "INNER JOIN bentuk_obat ON barang.kode_bentuk_obat = bentuk_obat.kode_bentuk_obat " +
                      "WHERE barang.kode_barang LIKE ? OR barang.nama_barang LIKE ? OR kategori_obat.nama_kategori LIKE ? OR bentuk_obat.nama_bentuk_obat LIKE ? OR barang.satuan_obat LIKE ?";
         PreparedStatement stmt = conn.prepareStatement(sql);
         String searchQuery = "%" + jTextField1.getText() + "%";
         for (int i = 1; i <= 5; i++) {
             stmt.setString(i, searchQuery);
         }
         ResultSet rs = stmt.executeQuery();

         // Mendapatkan model tabel yang ada
         DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

         // Menghapus semua baris yang sudah ada dari model tabel
         model.setRowCount(0);

         // Membuat daftar baris untuk status selain "Aman"
         ArrayList<Object[]> nonSafeRows = new ArrayList<>();
         ArrayList<Object[]> safeRows = new ArrayList<>();

         // Memproses hasil kueri dan menambahkannya ke daftar yang sesuai
         while (rs.next()) {
             // Menentukan status berdasarkan tanggal kadaluarsa
             String status = rs.getString("status");
             Object[] row = {
                 status,
                 rs.getString("kode_barang"),
                 rs.getString("nama_barang"),
                 rs.getString("nama_kategori"),
                 rs.getString("nama_bentuk_obat"),
                 rs.getString("satuan_obat"),
                 rs.getString("kadaluarsa"),
                 rs.getInt("kuantitas"),
                 rs.getInt("harga_pcs")
             };
             if (status.equals("Aman")) {
                 safeRows.add(row);
             } else {
                 nonSafeRows.add(row);
             }
         }

         // Menambahkan baris yang tidak aman terlebih dahulu
         for (Object[] row : nonSafeRows) {
             model.addRow(row);
         }

         // Kemudian menambahkan baris yang aman
         for (Object[] row : safeRows) {
             model.addRow(row);
         }

         // Setelah model tabel diisi ulang, panggil method setRowColor() untuk menerapkan render warna
         setRowColor();

         // Menutup koneksi
         rs.close();
         stmt.close();
         conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
     
        jTable1.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseReleased(MouseEvent e) {
            int r = jTable1.rowAtPoint(e.getPoint());
            if (r >= 0 && r < jTable1.getRowCount()) {
                jTable1.setRowSelectionInterval(r, r);
            } else {
                jTable1.clearSelection();
            }

            int rowIndex = jTable1.getSelectedRow();
            if (rowIndex < 0)
                return;

            if (e.isPopupTrigger() && e.getComponent() instanceof JTable ) {
                JPopupMenu popup = new JPopupMenu();

                // Tambahkan opsi yang ingin Anda tampilkan di sini
                JMenuItem option1 = new JMenuItem("Tandai stok kosong");
                JMenuItem option2 = new JMenuItem("Update Stok");
                JMenuItem option3 = new JMenuItem("Hapus Item");
                JMenuItem option4 = new JMenuItem("Detail Item");
                
                // Tambahkan action listener untuk setiap opsi
                option1.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        // Tindakan yang akan dilakukan ketika opsi 1 dipilih
                        System.out.println("Opsi 1 dipilih pada baris: " + rowIndex);
                    }
                });

                option2.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        // Tindakan yang akan dilakukan ketika opsi 2 dipilih
                        System.out.println("Opsi 2 dipilih pada baris: " + rowIndex);
                    }
                });
                
                option3.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        // Tindakan yang akan dilakukan ketika opsi 2 dipilih
                        System.out.println("Opsi 3 dipilih pada baris: " + rowIndex);
                    }
                });
                
                option4.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        // Tindakan yang akan dilakukan ketika opsi 2 dipilih
                        System.out.println("Opsi 4 dipilih pada baris: " + rowIndex);
                    }
                });
                // Tambahkan opsi ke menu popup
                popup.add(option1);
                popup.add(option2);
                popup.add(option3);
                popup.add(option4);
                // Tampilkan menu popup di posisi klik mouse
                popup.show(e.getComponent(), e.getX(), e.getY());
            }
        }
    });
    }

   private void setRowColor() {
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                // Mengambil nilai dari kolom status pada baris saat ini
                String status = (String) table.getModel().getValueAt(row, 0);

                // Memberikan warna latar belakang berdasarkan status
                if (status.equals("Expired") || status.equals("Mendekati Expired") || status.equals("Stok habis")) {
                    c.setBackground(Color.decode("#ff6961")); // Merah
                } else if (status.equals("Expired dalam 6 bulan") || status.equals("Stok akan habis")) {
                    c.setBackground(Color.decode("#ff964f")); // Orange
                } else {
                    c.setBackground(table.getBackground()); // Warna default untuk status lainnya
                }

                // Memberi warna teks putih pada baris dengan status selain "Aman"
                if (!status.equals("Aman")) {
                    c.setForeground(Color.WHITE);
                } else {
                    c.setForeground(table.getForeground()); // Mengembalikan warna teks default jika status adalah "Aman"
                }

                return c;
            }
        };

        // Mengatur renderer untuk semua kolom
        for (int i = 0; i < jTable1.getColumnCount(); i++) {
            jTable1.getColumnModel().getColumn(i).setCellRenderer(renderer);
        }
    }



    private void SalesTable() {
        try {
            // Mendapatkan koneksi ke database dari kelas DBConnection
            Connection conn = DBConnection.getConnection();

            // Membuat statement SQL untuk mengambil data penjualan
            String sql = "SELECT dp.kode_penjualan, p.tanggal_transaksi, k.username AS user, dp.kode_barang, b.nama_barang, dp.jumlah_terjual AS barang_terjual, dp.laba_pcs, dp.laba_total " +
                         "FROM detail_penjualan dp " +
                         "JOIN penjualan p ON dp.kode_penjualan = p.kode_penjualan " +
                         "JOIN barang b ON dp.kode_barang = b.kode_barang " +
                         "JOIN akun_karyawan k ON p.kode_user = k.kode_user";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);

            // Mendapatkan model tabel yang ada
            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();

            // Menghapus semua baris yang sudah ada dari model tabel
            model.setRowCount(0);

            // Memproses hasil kueri dan menambahkannya ke model tabel
            while (rs.next()) {
                Object[] row = {
                        rs.getString("kode_penjualan"),
                        rs.getDate("tanggal_transaksi"),
                        rs.getString("user"),
                        rs.getString("kode_barang"),
                        rs.getString("nama_barang"),
                        rs.getInt("barang_terjual"),
                        rs.getInt("laba_pcs"),
                        rs.getInt("laba_total")
                };
                model.addRow(row);
            }

            // Menutup koneksi
            rs.close();
            stmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        jTable2.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseReleased(MouseEvent e) {
            int r = jTable2.rowAtPoint(e.getPoint());
            if (r >= 0 && r < jTable2.getRowCount()) {
                jTable2.setRowSelectionInterval(r, r);
            } else {
                jTable2.clearSelection();
            }

            int rowIndex = jTable2.getSelectedRow();
            if (rowIndex < 0)
                return;

            if (e.isPopupTrigger() && e.getComponent() instanceof JTable ) {
                JPopupMenu popup = new JPopupMenu();

                // Tambahkan opsi yang ingin Anda tampilkan di sini
                JMenuItem option1 = new JMenuItem("Opsi 1");
                JMenuItem option2 = new JMenuItem("Opsi 2");

                // Tambahkan action listener untuk setiap opsi
                option1.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        // Tindakan yang akan dilakukan ketika opsi 1 dipilih
                        System.out.println("Opsi 1 dipilih pada baris: " + rowIndex);
                    }
                });

                option2.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        // Tindakan yang akan dilakukan ketika opsi 2 dipilih
                        System.out.println("Opsi 2 dipilih pada baris: " + rowIndex);
                    }
                });

                // Tambahkan opsi ke menu popup
                popup.add(option1);
                popup.add(option2);

                // Tampilkan menu popup di posisi klik mouse
                popup.show(e.getComponent(), e.getX(), e.getY());
            }
        }
    });
    }

   
    private void PurchaseTable() {
        try {
            // Mendapatkan koneksi ke database dari kelas DBConnection
            Connection conn = DBConnection.getConnection();

            // Membuat statement SQL untuk mengambil data pembelian
            String sql = "SELECT " +
                         "pembelian.kode_pemesanan, " +
                         "pembelian.tanggal_pemesanan, " +
                         "distributor.nama_distributor, " +
                         "pembelian.kode_barang, " +
                         "barang.nama_barang, " +
                         "kategori_obat.nama_kategori, " +
                         "bentuk_obat.nama_bentuk_obat, " +
                         "barang.satuan_obat, " +
                         "barang.kuantitas, " +
                         "pembelian.harga_total " +
                         "FROM pembelian " +
                         "INNER JOIN barang ON pembelian.kode_barang = barang.kode_barang " +
                         "INNER JOIN distributor ON pembelian.kode_distributor = distributor.kode_distributor " +
                         "INNER JOIN kategori_obat ON barang.kode_kategori_obat = kategori_obat.kode_kategori_obat " +
                         "INNER JOIN bentuk_obat ON barang.kode_bentuk_obat = bentuk_obat.kode_bentuk_obat";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);

            // Mendapatkan model tabel yang ada
            DefaultTableModel model = (DefaultTableModel) jTable3.getModel();

            // Menghapus semua baris yang sudah ada dari model tabel
            model.setRowCount(0);

            // Memproses hasil kueri dan menambahkannya ke model tabel
            while (rs.next()) {
                Object[] row = {
                        rs.getString("kode_pemesanan"),
                        rs.getDate("tanggal_pemesanan"),
                        rs.getString("nama_distributor"),
                        rs.getString("kode_barang"),
                        rs.getString("nama_barang"),
                        rs.getString("nama_kategori"),
                        rs.getString("nama_bentuk_obat"),
                        rs.getString("satuan_obat"),
                        rs.getInt("kuantitas"),
                        rs.getInt("harga_total")
                };
                model.addRow(row);
            }

            // Menutup koneksi
            rs.close();
            stmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        jTable3.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseReleased(MouseEvent e) {
            int r = jTable3.rowAtPoint(e.getPoint());
            if (r >= 0 && r < jTable3.getRowCount()) {
                jTable3.setRowSelectionInterval(r, r);
            } else {
                jTable3.clearSelection();
            }

            int rowIndex = jTable3.getSelectedRow();
            if (rowIndex < 0)
                return;

            if (e.isPopupTrigger() && e.getComponent() instanceof JTable ) {
                JPopupMenu popup = new JPopupMenu();

                // Tambahkan opsi yang ingin Anda tampilkan di sini
                JMenuItem option1 = new JMenuItem("Opsi 1");
                JMenuItem option2 = new JMenuItem("Opsi 2");

                // Tambahkan action listener untuk setiap opsi
                option1.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        // Tindakan yang akan dilakukan ketika opsi 1 dipilih
                        System.out.println("Opsi 1 dipilih pada baris: " + rowIndex);
                    }
                });

                option2.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        // Tindakan yang akan dilakukan ketika opsi 2 dipilih
                        System.out.println("Opsi 2 dipilih pada baris: " + rowIndex);
                    }
                });

                // Tambahkan opsi ke menu popup
                popup.add(option1);
                popup.add(option2);

                // Tampilkan menu popup di posisi klik mouse
                popup.show(e.getComponent(), e.getX(), e.getY());
            }
        }
    });
    }
    
    private void DistributorTable() {
        try {
            // Mendapatkan koneksi ke database dari kelas DBConnection
            Connection conn = DBConnection.getConnection();

            // Membuat statement SQL untuk mengambil data distributor
            String sql = "SELECT kode_distributor, nama_distributor, alamat, kontak_utama, email, nomor_utama FROM distributor";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);

            // Mendapatkan model tabel yang ada
            DefaultTableModel model = (DefaultTableModel) jTable4.getModel();

            // Menghapus semua baris yang sudah ada dari model tabel
            model.setRowCount(0);

            // Memproses hasil kueri dan menambahkannya ke model tabel
            while (rs.next()) {
                Object[] row = {
                        rs.getString("kode_distributor"),
                        rs.getString("nama_distributor"),
                        rs.getString("alamat"),
                        rs.getString("kontak_utama"),
                        rs.getString("email"),
                        rs.getString("nomor_utama")
                };
                model.addRow(row);
            }

            // Menutup koneksi
            rs.close();
            stmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        jTable4.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseReleased(MouseEvent e) {
            int r = jTable4.rowAtPoint(e.getPoint());
            if (r >= 0 && r < jTable4.getRowCount()) {
                jTable4.setRowSelectionInterval(r, r);
            } else {
                jTable4.clearSelection();
            }

            int rowIndex = jTable4.getSelectedRow();
            if (rowIndex < 0)
                return;

            if (e.isPopupTrigger() && e.getComponent() instanceof JTable ) {
                JPopupMenu popup = new JPopupMenu();

                // Tambahkan opsi yang ingin Anda tampilkan di sini
                JMenuItem option1 = new JMenuItem("Opsi 1");
                JMenuItem option2 = new JMenuItem("Opsi 2");

                // Tambahkan action listener untuk setiap opsi
                option1.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        // Tindakan yang akan dilakukan ketika opsi 1 dipilih
                        System.out.println("Opsi 1 dipilih pada baris: " + rowIndex);
                    }
                });

                option2.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        // Tindakan yang akan dilakukan ketika opsi 2 dipilih
                        System.out.println("Opsi 2 dipilih pada baris: " + rowIndex);
                    }
                });

                // Tambahkan opsi ke menu popup
                popup.add(option1);
                popup.add(option2);

                // Tampilkan menu popup di posisi klik mouse
                popup.show(e.getComponent(), e.getX(), e.getY());
            }
        }
    });
    }

    private void OperationTable() {
        try {
            // Mendapatkan koneksi ke database dari kelas DBConnection
            Connection conn = DBConnection.getConnection();

            // Membuat statement SQL untuk mengambil data biaya
            String sql = "SELECT nama_biaya, tanggal, deskripsi, total_biaya FROM operasional";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);

            // Mendapatkan model tabel yang ada
            DefaultTableModel model = (DefaultTableModel) jTable6.getModel();

            // Menghapus semua baris yang sudah ada dari model tabel
            model.setRowCount(0);

            // Memproses hasil kueri dan menambahkannya ke model tabel
            while (rs.next()) {
                Object[] row = {
                        rs.getString("nama_biaya"),
                        rs.getString("tanggal"),
                        rs.getString("deskripsi"),
                        rs.getInt("total_biaya")
                };
                model.addRow(row);
            }

            // Menutup koneksi
            rs.close();
            stmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        jTable6.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseReleased(MouseEvent e) {
            int r = jTable6.rowAtPoint(e.getPoint());
            if (r >= 0 && r < jTable6.getRowCount()) {
                jTable6.setRowSelectionInterval(r, r);
            } else {
                jTable6.clearSelection();
            }

            int rowIndex = jTable6.getSelectedRow();
            if (rowIndex < 0)
                return;

            if (e.isPopupTrigger() && e.getComponent() instanceof JTable ) {
                JPopupMenu popup = new JPopupMenu();

                // Tambahkan opsi yang ingin Anda tampilkan di sini
                JMenuItem option1 = new JMenuItem("Opsi 1");
                JMenuItem option2 = new JMenuItem("Opsi 2");

                // Tambahkan action listener untuk setiap opsi
                option1.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        // Tindakan yang akan dilakukan ketika opsi 1 dipilih
                        System.out.println("Opsi 1 dipilih pada baris: " + rowIndex);
                    }
                });

                option2.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        // Tindakan yang akan dilakukan ketika opsi 2 dipilih
                        System.out.println("Opsi 2 dipilih pada baris: " + rowIndex);
                    }
                });

                // Tambahkan opsi ke menu popup
                popup.add(option1);
                popup.add(option2);

                // Tampilkan menu popup di posisi klik mouse
                popup.show(e.getComponent(), e.getX(), e.getY());
            }
        }
    });
    }

    
    private void WorkerTable() {
        try {
            // Mendapatkan koneksi ke database dari kelas DBConnection
            Connection conn = DBConnection.getConnection();

            // Membuat statement SQL untuk mengambil data karyawan
            String sql = "SELECT nama, email, username, password, rfid FROM akun_karyawan";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);

            // Mendapatkan model tabel yang ada
            DefaultTableModel model = (DefaultTableModel) jTable5.getModel();

            // Menghapus semua baris yang sudah ada dari model tabel
            model.setRowCount(0);

            // Memproses hasil kueri dan menambahkannya ke model tabel
            while (rs.next()) {
                Object[] row = {
                        rs.getString("nama"),
                        rs.getString("email"),
                        rs.getString("username"),
                        rs.getString("password"),
                        rs.getString("rfid")
                };
                model.addRow(row);
            }

            // Menutup koneksi
            rs.close();
            stmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        jTable5.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseReleased(MouseEvent e) {
            int r = jTable5.rowAtPoint(e.getPoint());
            if (r >= 0 && r < jTable5.getRowCount()) {
                jTable5.setRowSelectionInterval(r, r);
            } else {
                jTable5.clearSelection();
            }

            int rowIndex = jTable5.getSelectedRow();
            if (rowIndex < 0)
                return;

            if (e.isPopupTrigger() && e.getComponent() instanceof JTable ) {
                JPopupMenu popup = new JPopupMenu();

                // Tambahkan opsi yang ingin Anda tampilkan di sini
                JMenuItem option1 = new JMenuItem("Opsi 1");
                JMenuItem option2 = new JMenuItem("Opsi 2");

                // Tambahkan action listener untuk setiap opsi
                option1.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        // Tindakan yang akan dilakukan ketika opsi 1 dipilih
                        System.out.println("Opsi 1 dipilih pada baris: " + rowIndex);
                    }
                });

                option2.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        // Tindakan yang akan dilakukan ketika opsi 2 dipilih
                        System.out.println("Opsi 2 dipilih pada baris: " + rowIndex);
                    }
                });

                // Tambahkan opsi ke menu popup
                popup.add(option1);
                popup.add(option2);

                // Tampilkan menu popup di posisi klik mouse
                popup.show(e.getComponent(), e.getX(), e.getY());
            }
        }
    });
    }
    
    private void AbsenTable() {
        try {
            // Mendapatkan koneksi ke database dari kelas DBConnection
            Connection conn = DBConnection.getConnection();

            // Membuat statement SQL untuk mengambil data absen beserta nama dari tabel barang
            String sql = "SELECT A.tanggal_kehadiran, A.waktu, B.nama AS Nama, B.username AS Username, B.email AS Email " +
                         "FROM absensi A " +
                         "INNER JOIN akun_karyawan B ON A.kode_user = B.kode_user " +
                         "ORDER BY A.tanggal_kehadiran DESC"; // Menambahkan ORDER BY untuk mengurutkan berdasarkan tanggal_kehadiran secara menurun

            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);

            // Mendapatkan model tabel yang ada untuk jTable9
            DefaultTableModel model = (DefaultTableModel) jTable9.getModel();

            // Menghapus semua baris yang sudah ada dari model tabel jTable9
            model.setRowCount(0);

            // Memproses hasil kueri dan menambahkannya ke model tabel jTable9
            while (rs.next()) {
                Object[] row = {
                        rs.getString("tanggal_kehadiran"),
                        rs.getString("waktu"),
                        rs.getString("Nama"), // Mengambil nama dari tabel barang menggunakan alias Nama
                        rs.getString("Username"),
                        rs.getString("Email")  
                };
                model.addRow(row);
            }

            // Menutup koneksi
            rs.close();
            stmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public static void main(String args[]) {
    FlatGitHubDarkIJTheme.setup();
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            mainAdmin home = new mainAdmin();
            home.setLocationRelativeTo(null); // Memposisikan jendela di tengah layar
            home.setVisible(true);
        }
    });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JButton jButton37;
    private javax.swing.JButton jButton38;
    private javax.swing.JButton jButton39;
    private javax.swing.JButton jButton40;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton43;
    private javax.swing.JButton jButton45;
    private javax.swing.JButton jButton46;
    private javax.swing.JButton jButton47;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton53;
    private javax.swing.JButton jButton54;
    private javax.swing.JButton jButton59;
    private javax.swing.JButton jButton60;
    private javax.swing.JButton jButton61;
    private javax.swing.JButton jButton66;
    private javax.swing.JButton jButton67;
    private javax.swing.JButton jButton68;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton73;
    private javax.swing.JButton jButton74;
    private javax.swing.JButton jButton75;
    private javax.swing.JButton jButton9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables

}
