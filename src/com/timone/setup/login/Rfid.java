package com.timone.setup.login;

import com.formdev.flatlaf.extras.FlatSVGIcon;
import com.timone.setup.main.startLogin;
import com.timone.setup.manager.FormsManager;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import com.fazecast.jSerialComm.SerialPort;

/**
 *
 * @author Fadel
 */
public class Rfid extends javax.swing.JPanel {

    public static startLogin logIn;
    private final String storedRFID = "4271603566";
    
    public Rfid() {
        initComponents();
        listenToRFID();
        
        jButton2.addActionListener(e -> {
            // Menginstansiasi objek menu jika belum diinstansiasi sebelumnya
            if (logIn == null) {
                logIn = new startLogin();
                // Menempatkan frame di tengah layar
                logIn.setLocationRelativeTo(null);
            }

            // Menampilkan menu
            logIn.setVisible(true);
            ((JFrame) SwingUtilities.getWindowAncestor(this)).dispose();
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        jProgressBar1.setIndeterminate(true);
        
        jButton1.setIcon(new FlatSVGIcon("com/timone/icon/svg/scan.svg"));
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setDefaultCapable(false);
        jButton1.setEnabled(false);
        jButton1.setFocusPainted(false);
        jButton1.setFocusable(false);
        jButton1.setRequestFocusEnabled(false);
        jButton1.setRolloverEnabled(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        jLabel1.setText("Ready to scan");

        jButton2.setText("Continue with password");
        jButton2.setBorderPainted(false);
        jButton2.setFocusPainted(false);
        jButton2.setFocusable(false);
        jButton2.setRequestFocusEnabled(false);
        jButton2.setRolloverEnabled(false);
        jButton2.setVerifyInputWhenFocusTarget(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(113, Short.MAX_VALUE))
            .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(80, 80, 80)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        FormsManager.getInstance().showFormLogin(new Login());
    }                                        
    
    private void listenToRFID() {
        // Mendapatkan daftar port serial yang tersedia
        SerialPort[] ports = SerialPort.getCommPorts();
        
        // Memeriksa setiap port untuk melihat apakah terdapat RFID yang terhubung
        for (SerialPort port : ports) {
            if (port.getDescriptivePortName().toLowerCase().contains("USB Input Device")) {
                // Jika port terdeteksi sebagai port RFID, buka port dan mulai mendengarkan RFID
                if (port.openPort()) {
                    System.out.println("RFID Reader terdeteksi pada port: " + port.getSystemPortName());
                    
                    // Thread untuk membaca data dari port RFID
                    Thread RFIDListener = new Thread(() -> {
                        while (true) {
                            // Membaca data dari port RFID
                            byte[] buffer = new byte[1024];
                            int numRead = port.readBytes(buffer, buffer.length);
                            
                            if (numRead > 0) {
                                String scannedRFID = new String(buffer, 0, numRead);
                                System.out.println("RFID berhasil terbaca: " + scannedRFID);
                                
                                // Memeriksa apakah RFID yang terbaca cocok dengan yang disimpan
                                if (scannedRFID.trim().equals(storedRFID)) {
                                    // Jika cocok, menampilkan pesan berhasil login
                                    System.out.println("RFID berhasil terbaca. Berhasil login!");
                                }
                            }
                            
                            try {
                                Thread.sleep(1000); // Menunggu 1 detik sebelum membaca lagi
                            } catch (InterruptedException ex) {
                                ex.printStackTrace();
                            }
                        }
                    });
                    RFIDListener.start();
                } else {
                    System.err.println("Gagal membuka port RFID: " + port.getSystemPortName());
                }
            }
        }
    }
    
    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JProgressBar jProgressBar1;
    // End of variables declaration                   
}
